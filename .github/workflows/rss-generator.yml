name: Generate JST Lotus RSS Feed

on:
  schedule:
    - cron: '10 1 * * *'      # JST 10:10毎日
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Python deps
        run: python -m pip install --upgrade requests beautifulsoup4 lxml

      - name: Build RSS via Python
        run: |
          python <<'PY'
          import requests, datetime, email.utils, pathlib, html
          from bs4 import BeautifulSoup

          BASE_URL = "https://www.jst.go.jp/program/india/call"
          TOP_URL = BASE_URL + "/"
          r = requests.get(TOP_URL, timeout=20)
          r.encoding = r.apparent_encoding
          soup = BeautifulSoup(r.text, "lxml")

          # ul, ol で公募情報が並ぶ最初のリストを探す（class有無に関わらず）
          news_ul = soup.select_one("ul, ol")
          print("[DEBUG] news_ul:", news_ul)
          if not news_ul:
              print("ERROR: 新着情報リストが見つかりません")
              exit(1)

          lis = news_ul.find_all("li")
          print(f"[DEBUG] li数: {len(lis)}")

          items = []
          for li in lis:
              # 日付取得（span.date, span, またはli直下テキストから）
              date_span = li.find("span", class_="date") or li.find("span")
              date_txt = date_span.get_text(strip=True) if date_span else ""
              dt = None
              for fmt in ("%Y/%m/%d", "%Y-%m-%d", "%Y.%m.%d"):
                  try:
                      dt = datetime.datetime.strptime(date_txt, fmt)
                      break
                  except:
                      continue
              if not dt:
                  dt = datetime.datetime.utcnow()
              pub = email.utils.format_datetime(dt)

              # タイトル・リンク
              a = li.find("a")
              if a:
                  title = a.get_text(strip=True)
                  link = a["href"]
                  if link and not link.startswith("http"):
                      link = BASE_URL + "/" + link.lstrip("./")
              else:
                  # aタグが無い場合はliテキスト全体をタイトルとしてTOPページをリンク
                  title = li.get_text(strip=True)
                  link = TOP_URL

              items.append(
                  f"<item><title>{html.escape(title)}</title><link>{link}</link><pubDate>{pub}</pubDate></item>"
              )

          rss = (
              '<?xml version="1.0" encoding="UTF-8"?>'
              '<rss version="2.0"><channel>'
              '<title>JSTインド公募 新着情報</title>'
              f'<link>{TOP_URL}</link>'
              '<description>JSTインド公募ページの新着RSS</description>'
              + "".join(items) +
              '</channel></rss>'
          )
          pathlib.Path("new_rss.xml").write_text(rss, encoding="utf-8")
          print("[DEBUG] new_rss.xml created")
          PY

      - name: Show files for debug
        run: ls -lhA

      - name: Move & stage rss.xml
        run: |
          mv -f new_rss.xml rss.xml
          ls -lhA
          git add rss.xml

      - name: Commit & push if changed
        run: |
          if git diff --cached --quiet; then
            echo "Nothing to commit"; exit 0; fi
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git commit -m "Update JST Lotus RSS feed"
          git push
